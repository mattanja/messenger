{
  application {
    secret: "WLx;3ZWekkc^[gD2xeF8jIy]eh/gI6k:yy2v1/;S/36rBS;rjs=klC/y8cLt9STB",
    langs: "en"
    #global: Global
    # Default to Routes in the root package (and conf/routes)
    # application.router=my.application.Routes
  }

  db {
    default {
      driver: org.h2.Driver,
      url: "jdbc:h2:mem:play;DB_CLOSE_DELAY=-1",
      #driver: com.mysql.jdbc.Driver,
      #url: "jdbc:mysql://localhost/messenger?characterEncoding=UTF-8",
      logStatements=true,
      user: sa,
      password: "",

      # trying to resolve connection issue - didn't help
      # http://stackoverflow.com/a/22640350/40853
      partitionCount: 1,
      maxConnectionsPerPartition: 20,
      minConnectionsPerPartition: 10,
      acquireIncrement: 1,
      acquireRetryAttempts: 5,
      acquireRetryDelay: 5 seconds,
      acquireRetryDelay: 5 seconds,
      idleMaxAge: 10 minute,
      idleConnectionTestPeriod: 5 minutes,
      initSQL: "SELECT 1",
      maxConnectionAge: 1 hour,

      ##
      # Override configuration with environment variables
      # http://stackoverflow.com/a/10657946/40853
      # https://github.com/typesafehub/config#optional-system-or-env-variable-overrides
      driver: ${?DB_DRIVER},
      url: ${?DB_URL},
      user: ${?DB_USER},
      password: ${?DB_PASSWORD},
    }
  }

  # Play-Slick Plugin additional configuration
  # ~~~~
  slick {
    default: "model.*"
  }

  # You can disable evolutions if needed
  #evolutionplugin=disabled

  logger {
    # You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory.
    root: WARN,
    play: WARN,
    application: TRACE,
    swagger=DEBUG,
    com.wordnik.swagger=INFO,
    scala.slick.jdbc.JdbcBackend.statement=TRACE
  }

  # Incoming mail server
  mailserver {
  	port: 8025,
  }

  # The SMTP server for sending email
  # See https://github.com/typesafehub/play-plugins/tree/master/mailer
  smtp {
    host: localhost,
    port: 25,
    #ssl: no,
    #tls: no,
    #user: "username",
    #password: "password",
  }

  swagger {
    api {
      basepath: "http://localhost:9000",
      basepath: ${?SWAGGER_BASEPATH},
    }
  }
}
